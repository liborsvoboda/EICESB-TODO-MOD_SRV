import{r as t,h as s}from"./p-ee0b9025.js";import{S as i}from"./p-f3f2f442.js";import{T as e}from"./p-6b50e59c.js";import{g as o}from"./p-ff2a3d88.js";import{b as n}from"./p-6f3ac5fa.js";import"./p-83f217d4.js";import"./p-134edcbd.js";import"./p-4745c03b.js";import"./p-a3b5bd35.js";import"./p-80de33dc.js";import"./p-93cac3a6.js";import"./p-9f020d74.js";import"./p-82db2ff5.js";import"./p-949334ec.js";let a=class{constructor(e){t(this,e),this.selectList={items:[],isFlagsEnum:!1},this.reloadSelectListFromDeps=async t=>{const e={},s=this.propertyDescriptor.options;for(const t of s.context.dependsOnValue){const s=this.activityModel.properties.find((e=>e.name==t));e[t]=s.expressions.Literal}const r=t.currentTarget;e[r.id]=r.value;let i={context:Object.assign(Object.assign({},s.context),{depValues:e}),runtimeSelectListProviderType:s.runtimeSelectListProviderType};this.selectList=await o(this.serverUrl,{options:i});let a=await n("#"+this.propertyDescriptor.name);const p=this.propertyDescriptor.defaultValue;if(p)this.currentValue=p;else{const t=this.selectList.items[0];t&&(this.currentValue="object"==typeof t?t.value:t.toString())}requestAnimationFrame((()=>{a.dispatchEvent(new Event("change"))}))}}async componentWillLoad(){var t,e;const s=this.propertyDescriptor.defaultSyntax||i.Literal;this.currentValue=this.propertyModel.expressions[s]||void 0;const r=this.propertyDescriptor.options&&"context"in this.propertyDescriptor.options?null===(e=null===(t=this.propertyDescriptor.options)||void 0===t?void 0:t.context)||void 0===e?void 0:e.dependsOnEvent:void 0;if(r){const t={};for(const e of r){for(const e of this.activityModel.properties)t[e.name]=e.expressions.Literal;const s=await n("#"+e);s.addEventListener("change",this.reloadSelectListFromDeps),t[e]=s.value}const e=this.propertyDescriptor.options,s={context:Object.assign(Object.assign({},e.context),{depValues:t}),runtimeSelectListProviderType:e.runtimeSelectListProviderType};if(this.selectList=await o(this.serverUrl,{options:s}),null==this.currentValue){const t=this.propertyDescriptor.defaultValue;if(t)this.currentValue=t;else{const t=this.selectList.items[0];t&&(this.currentValue="object"==typeof t?t.value:t.toString())}}}else if(this.selectList=await o(this.serverUrl,this.propertyDescriptor),null==this.currentValue){const t=this.propertyDescriptor.defaultValue;if(t)this.currentValue=t;else{const t=this.selectList.items[0];t&&(this.currentValue="object"==typeof t?t.value:t.toString())}}null!=this.currentValue&&(this.propertyModel.expressions[s]=this.currentValue)}onChange(t){this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||i.Literal]=this.currentValue=t.target.value}onDefaultSyntaxValueChanged(t){this.currentValue=t.detail}render(){const t=this.propertyDescriptor,e=this.propertyModel,r=t.name,i=r,o=r;let n=this.currentValue;const{items:a}=this.selectList;if(null==n){const t=this.propertyDescriptor.defaultValue;n=t?t.toString():void 0}return s("elsa-property-editor",{activityModel:this.activityModel,propertyDescriptor:t,propertyModel:e,onDefaultSyntaxValueChanged:t=>this.onDefaultSyntaxValueChanged(t),"single-line":!0},s("select",{id:i,name:o,onChange:t=>this.onChange(t),class:"elsa-mt-1 elsa-block focus:elsa-ring-blue-500 focus:elsa-border-blue-500 elsa-w-full elsa-shadow-sm sm:elsa-max-w-xs sm:elsa-text-sm elsa-border-gray-300 elsa-rounded-md"},a.map((t=>{const e="object"==typeof t,r=e?t.value:t.toString(),i=e?t.text:t.toString();return s("option",{value:r,selected:r===n},i)}))))}};e.injectProps(a,["serverUrl"]);export{a as elsa_dropdown_property};